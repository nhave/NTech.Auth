@using OpenIddict.EntityFrameworkCore.Models
@inject OpenIddictService OpenIddictService

@attribute [Authorize(Roles = "Admin")]
@page "/admin/scopes"

<BasePage Subpage="scopes">
    <Header>
        <div class="row justify-content-between">
            <div class="col-11">
                <h1>Scopes</h1>
            </div>
            <div class="col-1 d-flex justify-content-end align-items-center">
                <Dropdown Class="dropdown-header">
                    <DropdownToggleButton Class="btn-icon border-0 p-0">
                        <Icon Size="IconSize.x3" Name="IconName.ThreeDotsVertical" />
                    </DropdownToggleButton>
                    <DropdownMenu Position="DropdownMenuPosition.End">
                        <DropdownItem To="admin/scopes/new" Type="DropdownItemType.Link">Add new scope</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
            </div>
        </div>

    </Header>
    <Body>

        <div class="nt-grid-container">
            <Grid @ref="grid"
                  TItem="OpenIddictEntityFrameworkCoreScope"
                  Class="table table-hover table-bordered m-0"
                  GridContainerClass="mb-3"
                  HeaderRowCssClass="bg-body-tertiary text-nowrap"
                  RowClass="GetRowClass"
                  DataProvider="ScopesDataProvider"
                  AllowPaging="true"
                  AllowSorting="true"
                  PageSize="10"
                  PageSizeSelectorVisible="true"
                  PageSizeSelectorItems="@(new int[] { 5,10,20 })"
                  Responsive="true"
                  EmptyText="No records to display">

                <GridColumns>
                    <GridColumn TItem="OpenIddictEntityFrameworkCoreScope" HeaderText="Display Name" SortKeySelector="@(item => item.DisplayName)" TextNoWrap="true">
                        @context.DisplayName
                        <a href="edit/scope/@context.Id" class="stretched-link"></a>
                    </GridColumn>
                    <GridColumn TItem="OpenIddictEntityFrameworkCoreScope" HeaderText="Name" SortKeySelector="@(item => item.Name)" TextNoWrap="true">
                        @context.Name
                    </GridColumn>
                </GridColumns>
            </Grid>
        </div>

    </Body>
</BasePage>

@code {
    Grid<OpenIddictEntityFrameworkCoreScope> grid = default!;
    private List<OpenIddictEntityFrameworkCoreScope> scopes = default!;

    private async Task<GridDataProviderResult<OpenIddictEntityFrameworkCoreScope>> ScopesDataProvider(GridDataProviderRequest<OpenIddictEntityFrameworkCoreScope> request)
    {
        if (scopes is null)
            scopes = await OpenIddictService.GetScopes();

        return await Task.FromResult(request.ApplyTo(scopes));
    }

    private string GetRowClass(OpenIddictEntityFrameworkCoreScope scope)
    {
        return "position-relative bg-body-tertiary bg-opacity-50";
    }
}
